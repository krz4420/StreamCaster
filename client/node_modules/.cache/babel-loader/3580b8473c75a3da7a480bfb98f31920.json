{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../Actions';\nimport flv from 'flv.js';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    const {\n      id\n    } = this.props.match.params;\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamShow.js"],"names":["React","connect","fetchStream","flv","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","match","params","id","buildPlayer","componentDidUpdate","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA,SAAKC,WAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,WAAL;AACH;;AAEDA,EAAAA,WAAW,GAAE;AACT,QAAG,KAAKE,MAAL,IAAe,CAAC,KAAKT,KAAL,CAAWU,MAA9B,EAAqC;AACjC;AACH;;AAED,UAAM;AAAEJ,MAAAA;AAAF,QAAS,KAAKN,KAAL,CAAWI,KAAX,CAAiBC,MAAhC;AACA,SAAKI,MAAL,GAAcb,GAAG,CAACe,YAAJ,CAAiB;AAC3BC,MAAAA,IAAI,EAAC,KADsB;AAE3BC,MAAAA,GAAG,EAAG,8BAA6BP,EAAG;AAFX,KAAjB,CAAd;AAKA,SAAKG,MAAL,CAAYK,kBAAZ,CAA+B,KAAKb,QAAL,CAAcc,OAA7C;AACA,SAAKN,MAAL,CAAYO,IAAZ;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKjB,KAAL,CAAWU,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKnB,KAAL,CAAWU,MAA1C;AAEA,wBACI;AAAA,8BACI;AAAO,QAAA,GAAG,EAAG,KAAKT,QAAlB;AAA4B,QAAA,KAAK,EAAE;AAACmB,UAAAA,KAAK,EAAE;AAAR,SAAnC;AAAoD,QAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA9CoC;;AAiDzC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACnB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../Actions';\nimport flv from 'flv.js';\n\nclass StreamShow extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.videoRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n        this.buildPlayer();\n    };\n\n    componentDidUpdate(){\n        this.buildPlayer();\n    }\n    \n    buildPlayer(){\n        if(this.player || !this.props.stream){\n            return;\n        }\n\n        const { id } = this.props.match.params;\n        this.player = flv.createPlayer({\n            type:'flv',\n            url: `http://localhost:8000/live/${id}.flv`\n        });\n\n        this.player.attachMediaElement(this.videoRef.current);\n        this.player.load();\n\n    }\n\n    render() {\n        if(!this.props.stream){\n            return <div>Loading...</div>\n        }\n\n        const { title, description } = this.props.stream;\n\n        return (\n            <div>\n                <video ref ={this.videoRef} style={{width: '100%'}} controls/>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, { fetchStream } )(StreamShow);"]},"metadata":{},"sourceType":"module"}