{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../Actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut(this.auth.currentUser.get().getId());\n      }\n\n      ;\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '163366238499-tqh63jubjb0l76jlpt340qfvsqju5n87.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \"Sign In With Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA+B,YAA/B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAgBrCC,YAhBqC,GAgBrBC,UAAD,IAAgB;AAC3B,UAAGA,UAAH,EAAc;AACV,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACH,OAFD,MAEM;AACF,aAAKJ,KAAL,CAAWL,OAAX,CAAmB,KAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAnB;AACH;;AAAA;AACJ,KAtBoC;;AAAA,SAwBrCC,aAxBqC,GAwBrB,MAAM;AAClB,WAAKJ,IAAL,CAAUP,MAAV;AACH,KA1BoC;;AAAA,SA4BrCY,cA5BqC,GA4BpB,MAAM;AACnB,WAAKL,IAAL,CAAUN,OAAV;AACH,KA9BoC;AAAA;;AAErCY,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAI;AACjCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAI;AACR,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AAEA,aAAKnB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBmB,MAArB,CAA4B,KAAKpB,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAkBDqB,EAAAA,gBAAgB,GAAE;AACd,QAAG,KAAKnB,KAAL,CAAWD,UAAX,KAA0B,IAA7B,EAAkC;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK,IAAG,KAAKC,KAAL,CAAWD,UAAd,EAAyB;AAC1B,0BACI;AAAQ,QAAA,OAAO,EAAI,KAAKO,cAAxB;AAAwC,QAAA,SAAS,EAAG,sBAApD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPI,MAQD;AACA,0BACI;AAAQ,QAAA,OAAO,EAAI,KAAKD,aAAxB;AAAsC,QAAA,SAAS,EAAG,sBAAlD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA3DoC;;AA4DxC;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEvB,IAAAA,UAAU,EAAEuB,KAAK,CAACrB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAFD;;AAGA,eAAeN,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA+CC,UAA/C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {signIn, signOut } from '../Actions'\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', ()=>{\n            window.gapi.client.init({\n                clientId: '163366238499-tqh63jubjb0l76jlpt340qfvsqju5n87.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(()=>{\n                this.auth = window.gapi.auth2.getAuthInstance();\n\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if(isSignedIn){\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else{\n            this.props.signOut(this.auth.currentUser.get().getId());\n        };\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton(){\n        if(this.props.isSignedIn === null){\n            return <div>LOADING</div>;\n        }\n        else if(this.props.isSignedIn){\n            return (\n                <button onClick = {this.onSignOutClick} className = \"ui red google button\">\n                    <i className = \"google icon\"/>\n                    Sign Out\n                </button>\n            )\n        }\n        else{\n            return (\n                <button onClick = {this.onSignInClick}className = \"ui red google button\">\n                    <i className = \"google icon\"/>\n                    Sign In With Google\n                </button>\n            \n                )\n        }\n    }\n\n    render() {\n        return(\n            <div>{this.renderAuthButton()}</div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\nexport default connect(mapStateToProps, { signIn, signOut } )(GoogleAuth);"]},"metadata":{},"sourceType":"module"}