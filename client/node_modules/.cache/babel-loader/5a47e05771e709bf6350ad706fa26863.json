{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    console.log(this.props.streams);\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"ui button primary\",\n          to: `/streams/edit/${stream.id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"ui button negative\",\n          to: `/streams/delete/${stream.id}`,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `streams/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","console","log","props","streams","renderAdmin","stream","userId","currentUserId","id","renderList","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions'\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props.streams)\n\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId){\n            return(\n                <div className = \"right floated content\">\n                    <Link className = \"ui button primary\" to = {`/streams/edit/${stream.id}`}>Edit</Link>\n                    <Link \n                        className = \"ui button negative\"\n                        to = {`/streams/delete/${stream.id}`}>\n                        Delete\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map(stream =>{\n            return(\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className = \"large middle aligned icon camera\" />\n                    <div className = \"content\">\n                        <Link to = {`streams/${stream.id}`}className = \"header\">{stream.title}</Link>\n                        <div className = \"description\">{stream.description}</div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n        if(this.props.isSignedIn){\n            return(\n                <div style = { {textAlign:'right'} }>\n                    <Link to = \"/streams/new\" className = \"ui button primary\">Create Stream</Link>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className = \"ui celled list\">{this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n            streams: Object.values(state.streams),\n            currentUserId: state.auth.userId,\n            isSignedIn: state.auth.isSignedIn,\n            };\n}\n\nexport default connect(mapStateToProps, { fetchStreams } )(StreamList);"]},"metadata":{},"sourceType":"module"}