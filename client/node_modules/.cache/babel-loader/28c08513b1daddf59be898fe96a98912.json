{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '13811654356-ttu0nc2h248vgjnfhe7tshga4iic0oqq.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.signedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.signedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Not signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"GoogleAuth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","renderAuthButton","signedIn","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAAEC,MAAAA,UAAU,EAAC;AAAb,KAF6B;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAI;AACjCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,yEADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAI;AACR,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AAAd,SAAd;AACH,OAND;AAOH,KARD;AASH;;AAEDC,EAAAA,gBAAgB,GAAE;AACd,QAAG,KAAKhB,KAAL,CAAWiB,QAAX,KAAwB,IAA3B,EAAgC;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK,IAAG,KAAKjB,KAAL,CAAWiB,QAAd,EAAuB;AACxB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFI,MAGD;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAhCoC;;AAiCxC;AAED,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n\n    state = { isSignedIn:null };\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', ()=>{\n            window.gapi.client.init({\n                clientId: '13811654356-ttu0nc2h248vgjnfhe7tshga4iic0oqq.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(()=>{\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({ isSignedIn: this.auth.isSignedIn.get() })\n            })\n        });\n    }\n\n    renderAuthButton(){\n        if(this.state.signedIn === null){\n            return <div>Loading...</div>\n        }\n        else if(this.state.signedIn){\n            return <div>Signed in</div>\n        }\n        else{\n            return <div>Not signed in</div>\n        }\n    }\n\n    render() {\n        return(\n            <div>GoogleAuth</div>\n        )\n    }\n};\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}