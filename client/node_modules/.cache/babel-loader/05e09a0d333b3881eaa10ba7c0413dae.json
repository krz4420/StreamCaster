{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../Actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        onSubmit: this.onSubmit,\n        initialValues: {\n          title: this.props.stream.title,\n          description: this.props.stream.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAK1BC,UAAD,IAAgB;AACtB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACH,KAPoC;AAAA;;AACrCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDE,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,QAAQ,EAAE,KAAKR,QADnB;AAEI,QAAA,aAAa,EAAK;AAACS,UAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWM,MAAX,CAAkBC,KAA1B;AAAiCC,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWM,MAAX,CAAkBE;AAAhE;AAFtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvBoC;;AA0BzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsB;AAC1C,SAAO;AACHL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAqDE,UAArD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../Actions'\nimport StreamForm from './StreamForm'\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit= (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues);\n    }\n\n    render(){\n        if(!this.props.stream){\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm \n                    onSubmit={this.onSubmit} \n                    initialValues = { {title: this.props.stream.title, description: this.props.stream.description} }\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps ) => {\n    return { \n        stream: state.streams[ownProps.match.params.id],\n     }\n}\n\nexport default connect(mapStateToProps, { fetchStream,editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}