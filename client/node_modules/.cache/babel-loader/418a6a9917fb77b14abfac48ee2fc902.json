{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    console.log(this.props.streams);\n    this.props.fetchStreams();\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"StreamList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","console","log","props","streams","render","mapStateToProps","state","Object","values"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AAEA,SAAKD,KAAL,CAAWN,YAAX;AACH;;AAEDQ,EAAAA,MAAM,GAAE;AACJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAboC;;AAgBzC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEH,IAAAA,OAAO,EAAEI,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACH,OAApB;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeR,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions'\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props.streams)\n\n        this.props.fetchStreams();\n    }\n\n    render(){\n        console.log(this.props.streams)\n        return (\n            <div>StreamList</div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { streams: Object.values(state.streams)}\n}\n\nexport default connect(mapStateToProps, { fetchStreams } )(StreamList);"]},"metadata":{},"sourceType":"module"}