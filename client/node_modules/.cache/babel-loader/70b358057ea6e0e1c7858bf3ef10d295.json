{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../Actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAEvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,aAAa,GAAE;AACX,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAX;AAAe,QAAA,SAAS,EAAG,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAG,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAEDC,EAAAA,aAAa,GAAE;AACX,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AAClB,aAAO,8CAAP;AACH;;AACD,WAAQ,0DAAyD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAAzF;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,KAAD;AACI,MAAA,KAAK,EAAG,eADZ;AAEI,MAAA,OAAO,EAAI,KAAKH,aAAL,EAFf;AAGI,MAAA,OAAO,EAAI,KAAKD,aAAL,EAHf;AAII,MAAA,SAAS,EAAI,MAAMT,OAAO,CAACc,IAAR,CAAa,GAAb;AAJvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA/BsC;;AAkC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxC,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeX,OAAO,CAACkB,eAAD,EAAiB;AAAEd,EAAAA;AAAF,CAAjB,CAAP,CAAyCC,YAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history'\nimport { fetchStream } from '../../Actions';\n\nclass StreamDelete extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions(){\n        return (\n            <React.Fragment>\n                <Link to = \"/\" className = \"ui button\">Cancel</Link>\n                <button className = \"ui button negative\">Delete</button>\n            </React.Fragment>\n        );\n    }\n\n    renderContent(){\n        if(!this.props.stream){\n            return 'Are you sure you want to delete this stream?'\n        }\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n    }\n\n    render(){\n        return (\n            <Modal \n                title = \"Delete Stream\"\n                content = {this.renderContent()}\n                actions = {this.renderActions()}\n                onDismiss = {() => history.push('/')}\n            />\n        );\n    };\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps,{ fetchStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}