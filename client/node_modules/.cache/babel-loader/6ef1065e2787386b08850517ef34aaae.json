{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    console.log(this.props.streams);\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  renderCreate() {}\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/components/Streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","console","log","props","streams","renderAdmin","stream","userId","currentUserId","renderList","map","title","description","id","renderCreate","render","mapStateToProps","state","Object","values","auth","isSignedIn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AAEA,SAAKD,KAAL,CAAWN,YAAX;AACH;;AAEDQ,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,QAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKJ,KAAL,CAAWK,aAAhC,EAA8C;AAC1C,0BACI;AAAK,QAAA,SAAS,EAAG,uBAAjB;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAG,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAG,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,GAAnB,CAAuBJ,MAAM,IAAG;AACnC,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACK,KAAKD,WAAL,CAAiBC,MAAjB,CADL,eAEI;AAAG,UAAA,SAAS,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,qBACKA,MAAM,CAACK,KADZ,eAEI;AAAK,YAAA,SAAS,EAAG,aAAjB;AAAA,sBAAgCL,MAAM,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA2BN,MAAM,CAACO,EAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXM,CAAP;AAYH;;AAEDC,EAAAA,YAAY,GAAG,CAEd;;AAEDC,EAAAA,MAAM,GAAE;AACJd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAG,gBAAjB;AAAA,kBAAmC,KAAKK,UAAL;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA9CoC;;AAiDzC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACCb,IAAAA,OAAO,EAAEc,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACb,OAApB,CADV;AAECI,IAAAA,aAAa,EAAES,KAAK,CAACG,IAAN,CAAWb,MAF3B;AAGCc,IAAAA,UAAU,EAAEJ,KAAK,CAACG,IAAN,CAAWC;AAHxB,GAAP;AAKH,CAND;;AAQA,eAAezB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions'\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props.streams)\n\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId){\n            return(\n                <div className = \"right floated content\">\n                    <button className = \"ui button primary\">Edit</button>\n                    <button className = \"ui button negative\">Delete</button>\n                </div>\n            )\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map(stream =>{\n            return(\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className = \"large middle aligned icon camera\" />\n                    <div className = \"content\">\n                        {stream.title}\n                        <div className = \"description\">{stream.description}</div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n\n    }\n\n    render(){\n        console.log(this.props.streams)\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className = \"ui celled list\">{this.renderList()}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n            streams: Object.values(state.streams),\n            currentUserId: state.auth.userId,\n            isSignedIn: state.auth.isSignedIn,\n            };\n}\n\nexport default connect(mapStateToProps, { fetchStreams } )(StreamList);"]},"metadata":{},"sourceType":"module"}