{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport Streams from '../Apis/Streams';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await Streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await Streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await Streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await Streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await Streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/krz4420/Desktop/Production/React/streams/client/src/Actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","Streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQQ,SARR;AAUA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAEX,OADJ;AAEFY,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAE,MAAM;AACxB,SAAM;AACFF,IAAAA,IAAI,EAAEV;AADJ,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAET,aADD;AAELU,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAON,QAAP,IAAoB;AAClD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACgB,GAAR,CAAY,UAAZ,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAER,aADD;AAELS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMT,QAAN,IAAiB;AAChD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACgB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEP,YADD;AAELQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACoB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEL,WADD;AAELM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAClD,QAAMT,OAAO,CAACsB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAT,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEN,aADD;AAELO,IAAAA,OAAO,EAAEa;AAFJ,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import { \n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n } from './types'\n\nimport Streams from '../Apis/Streams'\nimport history from '../history'\nexport const signIn = (userId) => {\n    return{\n        type: SIGN_IN,\n        payload: userId,\n    }\n}\n\nexport const signOut= () => {\n    return{\n        type: SIGN_OUT,\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await Streams.post('/streams', { ...formValues, userId} );\n\n    dispatch({\n        type: CREATE_STREAM,\n        payload: response.data,\n    })\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n    const response = await Streams.get('/streams');\n\n    dispatch({\n        type: FETCH_STREAMS,\n        payload: response.data,\n    })\n};\n\nexport const fetchStream = (id) => async dispatch =>{\n    const response = await Streams.get(`/streams/${id}`);\n\n    dispatch({\n        type: FETCH_STREAM,\n        payload: response.data\n    })\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await Streams.put(`/streams/${id}`, formValues);\n\n    dispatch({\n        type: EDIT_STREAM,\n        payload: response.data\n    })\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await Streams.delete(`/streams/${id}`);\n\n    dispatch({\n        type: DELETE_STREAM,\n        payload: id\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}